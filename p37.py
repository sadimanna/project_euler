# -*- coding: utf-8 -*-
"""p37.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fds0SeYxS3svOHztkQ4rE7FCEsOCNbXt
"""

import numpy as np

pnum = 0
num = 10
sum_nums = 0

def is_prime(n):
    if n == 2 or n == 3: return True
    if n < 2 or n%2 == 0: return False
    if n < 9: return True
    if n%3 == 0: return False
    r = int(n**0.5)
    f = 5
    while f <= r:
        #print '\t',f
        if n%f == 0: return False
        if n%(f+2) == 0: return False
        f +=6
    return True    

while pnum != 11:
    flag = 0
    temp_num = num
    num_list = set([num])
    prime_list = []
    while temp_num:
        temp_num = int((temp_num - (temp_num%10))/10)
        num_list.add(temp_num)
    num_list.remove(0)
    #print(num_list)
    #num = temp_num
    ten = 10
    while num/ten:
        num_list.add(num%ten)
        ten = ten*10
    #print(num_list)
    for n in num_list:
        if is_prime(n):
            prime_list.append(True)
        else:
            prime_list.append(False)
    #print(prime_list)
    if np.all(prime_list):
        print(num)
        sum_nums+=num
        pnum+=1
    num+=1

print(sum_nums)

